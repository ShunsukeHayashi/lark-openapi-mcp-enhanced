# =============================================================================
# Lark OpenAPI MCP Enhanced - Environment Configuration
# =============================================================================
# Configuration for the enhanced Lark MCP server with multi-agent capabilities
# =============================================================================

# -----------------------------------------------------------------------------
# Core Lark/Feishu Configuration (REQUIRED)
# -----------------------------------------------------------------------------

# Lark App Credentials (REQUIRED)
# Get these from Lark Developer Console: https://open.larksuite.com/
APP_ID=your_lark_app_id_here
APP_SECRET=your_lark_app_secret_here

# Lark API Configuration
LARK_DOMAIN=https://open.feishu.cn
# Alternative for international: https://open.larksuite.com
LARK_LANGUAGE=en
# Options: en, zh, ja
LARK_TOKEN_MODE=auto
# Options: auto, tenant, user

# Optional: User Access Token (for user-specific operations)
# USER_ACCESS_TOKEN=your_user_token_here

# -----------------------------------------------------------------------------
# MCP Server Configuration
# -----------------------------------------------------------------------------

# MCP Server Mode
MCP_MODE=stdio
# Options: stdio (for Claude Desktop), sse (for HTTP access), webhook

# MCP Server Port (for SSE mode only)
MCP_PORT=3000

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=200
RATE_LIMIT_WRITES_PER_MINUTE=20
RATE_LIMIT_ADMIN_PER_MINUTE=5

# Tool Configuration
TOOL_NAME_CASE=snake
# Options: snake, camel, kebab

# Bundle Configuration (for specialized tool bundles)
BUNDLE_TYPE=base
# Options: base, docs, collab, genesis, custom-minimal

# -----------------------------------------------------------------------------
# Multi-Agent System Configuration
# -----------------------------------------------------------------------------

# Agent System Features
AGENTS_ENABLED=true
COORDINATOR_ENABLED=true
SPECIALIST_AGENTS_ENABLED=true

# AI Integration for Agents
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.1
OPENAI_MAX_TOKENS=4000

# Agent Communication
AGENT_HEARTBEAT_INTERVAL=30000
AGENT_MAX_CONCURRENT_TASKS=3
AGENT_TASK_TIMEOUT=300000

# -----------------------------------------------------------------------------
# Genesis AI System Configuration
# -----------------------------------------------------------------------------

# Genesis Features (AI-powered Base creation)
GENESIS_ENABLED=true
GENESIS_MODEL=gpt-4
GENESIS_LANGUAGE=en
GENESIS_TEMPLATE_VERSION=v1.0

# Genesis Security
GENESIS_REQUIRE_CONFIRMATION=true
GENESIS_MAX_TABLES_PER_APP=20
GENESIS_MAX_FIELDS_PER_TABLE=50

# -----------------------------------------------------------------------------
# Logging & Monitoring
# -----------------------------------------------------------------------------

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug, trace
LOG_FORMAT=json
# Options: json, text
LOG_FILE_ENABLED=false
LOG_FILE_PATH=./logs/lark-mcp.log

# Agent Monitoring
AGENT_METRICS_ENABLED=true
AGENT_PERFORMANCE_TRACKING=true

# Health Check Configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000

# -----------------------------------------------------------------------------
# External Integrations (Optional)
# -----------------------------------------------------------------------------

# YouTube Integration
# YOUTUBE_API_KEY=your_youtube_api_key_here
# YOUTUBE_CHANNEL_ID=your_channel_id_here

# Google Gemini (Alternative AI Provider)
# GOOGLE_GEMINI_API_KEY=your_gemini_api_key_here

# Context Engineering System
# CONTEXT_API_URL=http://localhost:9003
# AI_GUIDES_API_URL=http://localhost:8888

# -----------------------------------------------------------------------------
# Development Configuration
# -----------------------------------------------------------------------------

# Environment
NODE_ENV=development
# Options: development, production, test

# Development Features
DEV_MODE=true
DEV_VERBOSE_LOGGING=true
DEV_MOCK_EXTERNAL_APIS=false

# Performance
NODE_OPTIONS=--max-old-space-size=4096

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------

# Webhook Security (if using webhook mode)
# WEBHOOK_SECRET=your_webhook_secret_here

# CORS Configuration (for SSE mode)
# CORS_ORIGINS=http://localhost:3000,https://your-domain.com
# CORS_CREDENTIALS=true

# API Security
DISABLE_X_POWERED_BY=true

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Experimental Features
EXPERIMENTAL_FEATURES=false
EXPERIMENTAL_AI_AGENTS=false
EXPERIMENTAL_BATCH_PROCESSING=false
EXPERIMENTAL_WORKFLOW_DESIGNER=false

# Legacy Support
LEGACY_API_SUPPORT=false

# -----------------------------------------------------------------------------
# Docker Configuration (if using containers)
# -----------------------------------------------------------------------------

# Docker Environment
# DOCKER_ENV=false
# MEMORY_LIMIT=512m
# CPU_LIMIT=1

# Container Health Checks
# HEALTH_CHECK_PATH=/health
# READINESS_CHECK_PATH=/ready

# =============================================================================
# Bundle-Specific Configurations
# =============================================================================

# Base Bundle (bitable operations)
# BUNDLE_BASE_TOOLS=bitable.v1.app.list,bitable.v1.app.create,bitable.v1.appTable.list

# Docs Bundle (document operations)
# BUNDLE_DOCS_TOOLS=docx.v1.document.create,docx.v1.document.get,drive.v1.file.upload

# Collab Bundle (collaboration features)
# BUNDLE_COLLAB_TOOLS=im.v1.message.create,im.v1.chat.create,calendar.v4.calendar.event.create

# Genesis Bundle (AI-powered creation)
# BUNDLE_GENESIS_TOOLS=genesis.builtin.createApp,genesis.builtin.createTable,genesis.builtin.createWorkspace

# Custom Minimal Bundle (essential tools only)
# BUNDLE_MINIMAL_TOOLS=bitable.v1.app.list,im.v1.message.create,docx.v1.document.create

# =============================================================================
# Additional Notes
# =============================================================================

# 1. Required Variables:
#    - APP_ID and APP_SECRET are REQUIRED for all functionality
#    - OPENAI_API_KEY is required for AI-enhanced features
#
# 2. Bundle Selection:
#    - Set BUNDLE_TYPE to specify which tool bundle to load
#    - Each bundle optimizes tools for specific use cases
#
# 3. Performance Tuning:
#    - Adjust rate limits based on your Lark app quotas
#    - Monitor agent performance with AGENT_METRICS_ENABLED
#
# 4. Security:
#    - Use strong API keys and rotate them regularly
#    - Enable webhooks security for production deployments
#
# 5. Development:
#    - Enable DEV_MODE and DEV_VERBOSE_LOGGING for debugging
#    - Use different configurations for dev/staging/prod environments